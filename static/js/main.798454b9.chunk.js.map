{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","completed","title","id","TodoList","todos","map","username","findUserById","userId","usersFromServer","find","mapTodosWithUsers","App","useState","setUserId","todoTitle","setTodoTitle","setTodos","isTitleError","setIsTitleError","isUserError","setIsUserError","findUniqueTodoId","sort","todo1","todo2","action","method","onSubmit","event","preventDefault","htmlFor","type","placeholder","onChange","target","value","defaultValue","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.798454b9.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ninterface UserInfoProps {\n  user: User;\n}\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { UserInfo } from '../UserInfo/UserInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoInfoProps {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  const {\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      className={`TodoInfo TodoInfo${completed && '--completed'}`}\n      data-id={todo.id}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface TodoListProps {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => <TodoInfo todo={todo} key={todo.id} />)}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { FormEventHandler, useState } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\n\nfunction findUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst mapTodosWithUsers = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [userId, setUserId] = useState(0);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [todos, setTodos] = useState(mapTodosWithUsers);\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isUserError, setIsUserError] = useState(false);\n\n  const findUniqueTodoId = (): number => {\n    const copyOfTodos = [...todos].sort((todo1, todo2) => todo2.id - todo1.id);\n    const lastId = copyOfTodos[0]?.id || 0;\n\n    return lastId + 1;\n  };\n\n  const createTodo = () => ({\n    id: findUniqueTodoId(),\n    userId,\n    title: todoTitle,\n    completed: false,\n    user: findUserById(userId),\n  });\n\n  const handleSubmit: FormEventHandler = (event) => {\n    event.preventDefault();\n\n    if (userId === 0) {\n      setIsUserError(true);\n    } else {\n      setIsUserError(false);\n    }\n\n    if (!todoTitle) {\n      setIsTitleError(true);\n    } else {\n      setIsTitleError(false);\n    }\n\n    if (userId > 0 && todoTitle !== '') {\n      setTodos([...todos, createTodo()]);\n      setUserId(0);\n      setTodoTitle('');\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTodoTitle(event.target.value);\n    setIsTitleError(false);\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setIsUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n          <input\n            id=\"titleInput\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Task title...\"\n            onChange={handleInputChange}\n            value={todoTitle}\n          />\n          {isTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n            onChange={handleSelectChange}\n            defaultValue={0}\n            value={userId}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {isUserError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}